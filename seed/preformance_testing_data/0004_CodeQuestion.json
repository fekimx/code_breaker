[
    {
        "model": "coding.codequestion",
        "pk": 1,
        "fields": {
            "name": "Question 1",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 2,
        "fields": {
            "name": "Question 2",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 3,
        "fields": {
            "name": "Question 3",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 4,
        "fields": {
            "name": "Question 4",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 5,
        "fields": {
            "name": "Question 5",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 6,
        "fields": {
            "name": "Question 6",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 7,
        "fields": {
            "name": "Question 7",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 8,
        "fields": {
            "name": "Question 8",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 9,
        "fields": {
            "name": "Question 9",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 10,
        "fields": {
            "name": "Question 10",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 11,
        "fields": {
            "name": "Question 11",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 12,
        "fields": {
            "name": "Question 12",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 13,
        "fields": {
            "name": "Question 13",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 14,
        "fields": {
            "name": "Question 14",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 15,
        "fields": {
            "name": "Question 15",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 16,
        "fields": {
            "name": "Question 16",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 17,
        "fields": {
            "name": "Question 17",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 18,
        "fields": {
            "name": "Question 18",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 19,
        "fields": {
            "name": "Question 19",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 20,
        "fields": {
            "name": "Question 20",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 21,
        "fields": {
            "name": "Question 21",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 22,
        "fields": {
            "name": "Question 22",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 23,
        "fields": {
            "name": "Question 23",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 24,
        "fields": {
            "name": "Question 24",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 25,
        "fields": {
            "name": "Question 25",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 26,
        "fields": {
            "name": "Question 26",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 27,
        "fields": {
            "name": "Question 27",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 28,
        "fields": {
            "name": "Question 28",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 29,
        "fields": {
            "name": "Question 29",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 30,
        "fields": {
            "name": "Question 30",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 31,
        "fields": {
            "name": "Question 31",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 32,
        "fields": {
            "name": "Question 32",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 33,
        "fields": {
            "name": "Question 33",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 34,
        "fields": {
            "name": "Question 34",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 35,
        "fields": {
            "name": "Question 35",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 36,
        "fields": {
            "name": "Question 36",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 37,
        "fields": {
            "name": "Question 37",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 38,
        "fields": {
            "name": "Question 38",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 39,
        "fields": {
            "name": "Question 39",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 40,
        "fields": {
            "name": "Question 40",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 41,
        "fields": {
            "name": "Question 41",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 42,
        "fields": {
            "name": "Question 42",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 43,
        "fields": {
            "name": "Question 43",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 44,
        "fields": {
            "name": "Question 44",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 45,
        "fields": {
            "name": "Question 45",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 46,
        "fields": {
            "name": "Question 46",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 47,
        "fields": {
            "name": "Question 47",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 48,
        "fields": {
            "name": "Question 48",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 49,
        "fields": {
            "name": "Question 49",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 50,
        "fields": {
            "name": "Question 50",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 51,
        "fields": {
            "name": "Question 51",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 52,
        "fields": {
            "name": "Question 52",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 53,
        "fields": {
            "name": "Question 53",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 54,
        "fields": {
            "name": "Question 54",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 55,
        "fields": {
            "name": "Question 55",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 56,
        "fields": {
            "name": "Question 56",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 57,
        "fields": {
            "name": "Question 57",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 58,
        "fields": {
            "name": "Question 58",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 59,
        "fields": {
            "name": "Question 59",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 60,
        "fields": {
            "name": "Question 60",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 61,
        "fields": {
            "name": "Question 61",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 62,
        "fields": {
            "name": "Question 62",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 63,
        "fields": {
            "name": "Question 63",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 64,
        "fields": {
            "name": "Question 64",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 65,
        "fields": {
            "name": "Question 65",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 66,
        "fields": {
            "name": "Question 66",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 67,
        "fields": {
            "name": "Question 67",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 68,
        "fields": {
            "name": "Question 68",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 69,
        "fields": {
            "name": "Question 69",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 70,
        "fields": {
            "name": "Question 70",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 71,
        "fields": {
            "name": "Question 71",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 72,
        "fields": {
            "name": "Question 72",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 73,
        "fields": {
            "name": "Question 73",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 74,
        "fields": {
            "name": "Question 74",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 75,
        "fields": {
            "name": "Question 75",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 76,
        "fields": {
            "name": "Question 76",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 77,
        "fields": {
            "name": "Question 77",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 78,
        "fields": {
            "name": "Question 78",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 79,
        "fields": {
            "name": "Question 79",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 80,
        "fields": {
            "name": "Question 80",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 81,
        "fields": {
            "name": "Question 81",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 82,
        "fields": {
            "name": "Question 82",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 83,
        "fields": {
            "name": "Question 83",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 84,
        "fields": {
            "name": "Question 84",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 85,
        "fields": {
            "name": "Question 85",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 86,
        "fields": {
            "name": "Question 86",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 87,
        "fields": {
            "name": "Question 87",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 88,
        "fields": {
            "name": "Question 88",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 89,
        "fields": {
            "name": "Question 89",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 90,
        "fields": {
            "name": "Question 90",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 91,
        "fields": {
            "name": "Question 91",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 92,
        "fields": {
            "name": "Question 92",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 93,
        "fields": {
            "name": "Question 93",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 94,
        "fields": {
            "name": "Question 94",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 95,
        "fields": {
            "name": "Question 95",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 96,
        "fields": {
            "name": "Question 96",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 97,
        "fields": {
            "name": "Question 97",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 98,
        "fields": {
            "name": "Question 98",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 99,
        "fields": {
            "name": "Question 99",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 100,
        "fields": {
            "name": "Question 100",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 101,
        "fields": {
            "name": "Question 101",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 102,
        "fields": {
            "name": "Question 102",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 103,
        "fields": {
            "name": "Question 103",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 104,
        "fields": {
            "name": "Question 104",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 105,
        "fields": {
            "name": "Question 105",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 106,
        "fields": {
            "name": "Question 106",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 107,
        "fields": {
            "name": "Question 107",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 108,
        "fields": {
            "name": "Question 108",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 109,
        "fields": {
            "name": "Question 109",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 110,
        "fields": {
            "name": "Question 110",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 111,
        "fields": {
            "name": "Question 111",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 112,
        "fields": {
            "name": "Question 112",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 113,
        "fields": {
            "name": "Question 113",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 114,
        "fields": {
            "name": "Question 114",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 115,
        "fields": {
            "name": "Question 115",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 116,
        "fields": {
            "name": "Question 116",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 117,
        "fields": {
            "name": "Question 117",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 118,
        "fields": {
            "name": "Question 118",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 119,
        "fields": {
            "name": "Question 119",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 120,
        "fields": {
            "name": "Question 120",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 121,
        "fields": {
            "name": "Question 121",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 122,
        "fields": {
            "name": "Question 122",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 123,
        "fields": {
            "name": "Question 123",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 124,
        "fields": {
            "name": "Question 124",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 125,
        "fields": {
            "name": "Question 125",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 126,
        "fields": {
            "name": "Question 126",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 127,
        "fields": {
            "name": "Question 127",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 128,
        "fields": {
            "name": "Question 128",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 129,
        "fields": {
            "name": "Question 129",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 130,
        "fields": {
            "name": "Question 130",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 131,
        "fields": {
            "name": "Question 131",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 132,
        "fields": {
            "name": "Question 132",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 133,
        "fields": {
            "name": "Question 133",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 134,
        "fields": {
            "name": "Question 134",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 135,
        "fields": {
            "name": "Question 135",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 136,
        "fields": {
            "name": "Question 136",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 137,
        "fields": {
            "name": "Question 137",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 138,
        "fields": {
            "name": "Question 138",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 139,
        "fields": {
            "name": "Question 139",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 140,
        "fields": {
            "name": "Question 140",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 141,
        "fields": {
            "name": "Question 141",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 142,
        "fields": {
            "name": "Question 142",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 143,
        "fields": {
            "name": "Question 143",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 144,
        "fields": {
            "name": "Question 144",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 145,
        "fields": {
            "name": "Question 145",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 146,
        "fields": {
            "name": "Question 146",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 147,
        "fields": {
            "name": "Question 147",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 148,
        "fields": {
            "name": "Question 148",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 149,
        "fields": {
            "name": "Question 149",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 150,
        "fields": {
            "name": "Question 150",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 151,
        "fields": {
            "name": "Question 151",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 152,
        "fields": {
            "name": "Question 152",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 153,
        "fields": {
            "name": "Question 153",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 154,
        "fields": {
            "name": "Question 154",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 155,
        "fields": {
            "name": "Question 155",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 156,
        "fields": {
            "name": "Question 156",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 157,
        "fields": {
            "name": "Question 157",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 158,
        "fields": {
            "name": "Question 158",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 159,
        "fields": {
            "name": "Question 159",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 160,
        "fields": {
            "name": "Question 160",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 161,
        "fields": {
            "name": "Question 161",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 162,
        "fields": {
            "name": "Question 162",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 163,
        "fields": {
            "name": "Question 163",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 164,
        "fields": {
            "name": "Question 164",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 165,
        "fields": {
            "name": "Question 165",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 166,
        "fields": {
            "name": "Question 166",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 167,
        "fields": {
            "name": "Question 167",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 168,
        "fields": {
            "name": "Question 168",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 169,
        "fields": {
            "name": "Question 169",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 170,
        "fields": {
            "name": "Question 170",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 171,
        "fields": {
            "name": "Question 171",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 172,
        "fields": {
            "name": "Question 172",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 173,
        "fields": {
            "name": "Question 173",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 174,
        "fields": {
            "name": "Question 174",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 175,
        "fields": {
            "name": "Question 175",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 176,
        "fields": {
            "name": "Question 176",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 177,
        "fields": {
            "name": "Question 177",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 178,
        "fields": {
            "name": "Question 178",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 179,
        "fields": {
            "name": "Question 179",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 180,
        "fields": {
            "name": "Question 180",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 181,
        "fields": {
            "name": "Question 181",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 182,
        "fields": {
            "name": "Question 182",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 183,
        "fields": {
            "name": "Question 183",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 184,
        "fields": {
            "name": "Question 184",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 185,
        "fields": {
            "name": "Question 185",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 186,
        "fields": {
            "name": "Question 186",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 187,
        "fields": {
            "name": "Question 187",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 188,
        "fields": {
            "name": "Question 188",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 189,
        "fields": {
            "name": "Question 189",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 190,
        "fields": {
            "name": "Question 190",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 191,
        "fields": {
            "name": "Question 191",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 192,
        "fields": {
            "name": "Question 192",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 193,
        "fields": {
            "name": "Question 193",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 194,
        "fields": {
            "name": "Question 194",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 195,
        "fields": {
            "name": "Question 195",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 196,
        "fields": {
            "name": "Question 196",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 197,
        "fields": {
            "name": "Question 197",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 198,
        "fields": {
            "name": "Question 198",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 199,
        "fields": {
            "name": "Question 199",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 200,
        "fields": {
            "name": "Question 200",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 201,
        "fields": {
            "name": "Question 201",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 202,
        "fields": {
            "name": "Question 202",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 203,
        "fields": {
            "name": "Question 203",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 204,
        "fields": {
            "name": "Question 204",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 205,
        "fields": {
            "name": "Question 205",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 206,
        "fields": {
            "name": "Question 206",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 207,
        "fields": {
            "name": "Question 207",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 208,
        "fields": {
            "name": "Question 208",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 209,
        "fields": {
            "name": "Question 209",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 210,
        "fields": {
            "name": "Question 210",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 211,
        "fields": {
            "name": "Question 211",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 212,
        "fields": {
            "name": "Question 212",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 213,
        "fields": {
            "name": "Question 213",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 214,
        "fields": {
            "name": "Question 214",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 215,
        "fields": {
            "name": "Question 215",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 216,
        "fields": {
            "name": "Question 216",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 217,
        "fields": {
            "name": "Question 217",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 218,
        "fields": {
            "name": "Question 218",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 219,
        "fields": {
            "name": "Question 219",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 220,
        "fields": {
            "name": "Question 220",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 221,
        "fields": {
            "name": "Question 221",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 222,
        "fields": {
            "name": "Question 222",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 223,
        "fields": {
            "name": "Question 223",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 224,
        "fields": {
            "name": "Question 224",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 225,
        "fields": {
            "name": "Question 225",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 226,
        "fields": {
            "name": "Question 226",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 227,
        "fields": {
            "name": "Question 227",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 228,
        "fields": {
            "name": "Question 228",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 229,
        "fields": {
            "name": "Question 229",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 230,
        "fields": {
            "name": "Question 230",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 231,
        "fields": {
            "name": "Question 231",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 232,
        "fields": {
            "name": "Question 232",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 233,
        "fields": {
            "name": "Question 233",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 234,
        "fields": {
            "name": "Question 234",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 235,
        "fields": {
            "name": "Question 235",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 236,
        "fields": {
            "name": "Question 236",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 237,
        "fields": {
            "name": "Question 237",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 238,
        "fields": {
            "name": "Question 238",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 239,
        "fields": {
            "name": "Question 239",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 240,
        "fields": {
            "name": "Question 240",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 241,
        "fields": {
            "name": "Question 241",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 242,
        "fields": {
            "name": "Question 242",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 243,
        "fields": {
            "name": "Question 243",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 244,
        "fields": {
            "name": "Question 244",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 245,
        "fields": {
            "name": "Question 245",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 246,
        "fields": {
            "name": "Question 246",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 247,
        "fields": {
            "name": "Question 247",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 248,
        "fields": {
            "name": "Question 248",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 249,
        "fields": {
            "name": "Question 249",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 250,
        "fields": {
            "name": "Question 250",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 251,
        "fields": {
            "name": "Question 251",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 252,
        "fields": {
            "name": "Question 252",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 253,
        "fields": {
            "name": "Question 253",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 254,
        "fields": {
            "name": "Question 254",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 255,
        "fields": {
            "name": "Question 255",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 256,
        "fields": {
            "name": "Question 256",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 257,
        "fields": {
            "name": "Question 257",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 258,
        "fields": {
            "name": "Question 258",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 259,
        "fields": {
            "name": "Question 259",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 260,
        "fields": {
            "name": "Question 260",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 261,
        "fields": {
            "name": "Question 261",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 262,
        "fields": {
            "name": "Question 262",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 263,
        "fields": {
            "name": "Question 263",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 264,
        "fields": {
            "name": "Question 264",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 265,
        "fields": {
            "name": "Question 265",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 266,
        "fields": {
            "name": "Question 266",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 267,
        "fields": {
            "name": "Question 267",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 268,
        "fields": {
            "name": "Question 268",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 269,
        "fields": {
            "name": "Question 269",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 270,
        "fields": {
            "name": "Question 270",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 271,
        "fields": {
            "name": "Question 271",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 272,
        "fields": {
            "name": "Question 272",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 273,
        "fields": {
            "name": "Question 273",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 274,
        "fields": {
            "name": "Question 274",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 275,
        "fields": {
            "name": "Question 275",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 276,
        "fields": {
            "name": "Question 276",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 277,
        "fields": {
            "name": "Question 277",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 278,
        "fields": {
            "name": "Question 278",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 279,
        "fields": {
            "name": "Question 279",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 280,
        "fields": {
            "name": "Question 280",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 281,
        "fields": {
            "name": "Question 281",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 282,
        "fields": {
            "name": "Question 282",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 283,
        "fields": {
            "name": "Question 283",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 284,
        "fields": {
            "name": "Question 284",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 285,
        "fields": {
            "name": "Question 285",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 286,
        "fields": {
            "name": "Question 286",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 287,
        "fields": {
            "name": "Question 287",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 288,
        "fields": {
            "name": "Question 288",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 289,
        "fields": {
            "name": "Question 289",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 290,
        "fields": {
            "name": "Question 290",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 291,
        "fields": {
            "name": "Question 291",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 292,
        "fields": {
            "name": "Question 292",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 293,
        "fields": {
            "name": "Question 293",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 294,
        "fields": {
            "name": "Question 294",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 295,
        "fields": {
            "name": "Question 295",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 296,
        "fields": {
            "name": "Question 296",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 297,
        "fields": {
            "name": "Question 297",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 298,
        "fields": {
            "name": "Question 298",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 299,
        "fields": {
            "name": "Question 299",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 300,
        "fields": {
            "name": "Question 300",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 301,
        "fields": {
            "name": "Question 301",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 302,
        "fields": {
            "name": "Question 302",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 303,
        "fields": {
            "name": "Question 303",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 304,
        "fields": {
            "name": "Question 304",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 305,
        "fields": {
            "name": "Question 305",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 306,
        "fields": {
            "name": "Question 306",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 307,
        "fields": {
            "name": "Question 307",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 308,
        "fields": {
            "name": "Question 308",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 309,
        "fields": {
            "name": "Question 309",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 310,
        "fields": {
            "name": "Question 310",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 311,
        "fields": {
            "name": "Question 311",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 312,
        "fields": {
            "name": "Question 312",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 313,
        "fields": {
            "name": "Question 313",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 314,
        "fields": {
            "name": "Question 314",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 315,
        "fields": {
            "name": "Question 315",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 316,
        "fields": {
            "name": "Question 316",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 317,
        "fields": {
            "name": "Question 317",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 318,
        "fields": {
            "name": "Question 318",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 319,
        "fields": {
            "name": "Question 319",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 320,
        "fields": {
            "name": "Question 320",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 321,
        "fields": {
            "name": "Question 321",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 322,
        "fields": {
            "name": "Question 322",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 323,
        "fields": {
            "name": "Question 323",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 324,
        "fields": {
            "name": "Question 324",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 325,
        "fields": {
            "name": "Question 325",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 326,
        "fields": {
            "name": "Question 326",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 327,
        "fields": {
            "name": "Question 327",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 328,
        "fields": {
            "name": "Question 328",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 329,
        "fields": {
            "name": "Question 329",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 330,
        "fields": {
            "name": "Question 330",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 331,
        "fields": {
            "name": "Question 331",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 332,
        "fields": {
            "name": "Question 332",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 333,
        "fields": {
            "name": "Question 333",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 334,
        "fields": {
            "name": "Question 334",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 335,
        "fields": {
            "name": "Question 335",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 336,
        "fields": {
            "name": "Question 336",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 337,
        "fields": {
            "name": "Question 337",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 338,
        "fields": {
            "name": "Question 338",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 339,
        "fields": {
            "name": "Question 339",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 340,
        "fields": {
            "name": "Question 340",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 341,
        "fields": {
            "name": "Question 341",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 342,
        "fields": {
            "name": "Question 342",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 343,
        "fields": {
            "name": "Question 343",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 344,
        "fields": {
            "name": "Question 344",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 345,
        "fields": {
            "name": "Question 345",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 346,
        "fields": {
            "name": "Question 346",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 347,
        "fields": {
            "name": "Question 347",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 348,
        "fields": {
            "name": "Question 348",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 349,
        "fields": {
            "name": "Question 349",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 350,
        "fields": {
            "name": "Question 350",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 351,
        "fields": {
            "name": "Question 351",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 352,
        "fields": {
            "name": "Question 352",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 353,
        "fields": {
            "name": "Question 353",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 354,
        "fields": {
            "name": "Question 354",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 355,
        "fields": {
            "name": "Question 355",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 356,
        "fields": {
            "name": "Question 356",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 357,
        "fields": {
            "name": "Question 357",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 358,
        "fields": {
            "name": "Question 358",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 359,
        "fields": {
            "name": "Question 359",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 360,
        "fields": {
            "name": "Question 360",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 361,
        "fields": {
            "name": "Question 361",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 362,
        "fields": {
            "name": "Question 362",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 363,
        "fields": {
            "name": "Question 363",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 364,
        "fields": {
            "name": "Question 364",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 365,
        "fields": {
            "name": "Question 365",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 366,
        "fields": {
            "name": "Question 366",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 367,
        "fields": {
            "name": "Question 367",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 368,
        "fields": {
            "name": "Question 368",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 369,
        "fields": {
            "name": "Question 369",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 370,
        "fields": {
            "name": "Question 370",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 371,
        "fields": {
            "name": "Question 371",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 372,
        "fields": {
            "name": "Question 372",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 373,
        "fields": {
            "name": "Question 373",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 374,
        "fields": {
            "name": "Question 374",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 375,
        "fields": {
            "name": "Question 375",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 376,
        "fields": {
            "name": "Question 376",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 377,
        "fields": {
            "name": "Question 377",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 378,
        "fields": {
            "name": "Question 378",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 379,
        "fields": {
            "name": "Question 379",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 380,
        "fields": {
            "name": "Question 380",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 381,
        "fields": {
            "name": "Question 381",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 382,
        "fields": {
            "name": "Question 382",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 383,
        "fields": {
            "name": "Question 383",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 384,
        "fields": {
            "name": "Question 384",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 385,
        "fields": {
            "name": "Question 385",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 386,
        "fields": {
            "name": "Question 386",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 387,
        "fields": {
            "name": "Question 387",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 388,
        "fields": {
            "name": "Question 388",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 389,
        "fields": {
            "name": "Question 389",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 390,
        "fields": {
            "name": "Question 390",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 391,
        "fields": {
            "name": "Question 391",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 392,
        "fields": {
            "name": "Question 392",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 393,
        "fields": {
            "name": "Question 393",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 394,
        "fields": {
            "name": "Question 394",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 395,
        "fields": {
            "name": "Question 395",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 396,
        "fields": {
            "name": "Question 396",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 397,
        "fields": {
            "name": "Question 397",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 398,
        "fields": {
            "name": "Question 398",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 399,
        "fields": {
            "name": "Question 399",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 400,
        "fields": {
            "name": "Question 400",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 401,
        "fields": {
            "name": "Question 401",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 402,
        "fields": {
            "name": "Question 402",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 403,
        "fields": {
            "name": "Question 403",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 404,
        "fields": {
            "name": "Question 404",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 405,
        "fields": {
            "name": "Question 405",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 406,
        "fields": {
            "name": "Question 406",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 407,
        "fields": {
            "name": "Question 407",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 408,
        "fields": {
            "name": "Question 408",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 409,
        "fields": {
            "name": "Question 409",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 410,
        "fields": {
            "name": "Question 410",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 411,
        "fields": {
            "name": "Question 411",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 412,
        "fields": {
            "name": "Question 412",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 413,
        "fields": {
            "name": "Question 413",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 414,
        "fields": {
            "name": "Question 414",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 415,
        "fields": {
            "name": "Question 415",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 416,
        "fields": {
            "name": "Question 416",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 417,
        "fields": {
            "name": "Question 417",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 418,
        "fields": {
            "name": "Question 418",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 419,
        "fields": {
            "name": "Question 419",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 420,
        "fields": {
            "name": "Question 420",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 421,
        "fields": {
            "name": "Question 421",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 422,
        "fields": {
            "name": "Question 422",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 423,
        "fields": {
            "name": "Question 423",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 424,
        "fields": {
            "name": "Question 424",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 425,
        "fields": {
            "name": "Question 425",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 426,
        "fields": {
            "name": "Question 426",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 427,
        "fields": {
            "name": "Question 427",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 428,
        "fields": {
            "name": "Question 428",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 429,
        "fields": {
            "name": "Question 429",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 430,
        "fields": {
            "name": "Question 430",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 431,
        "fields": {
            "name": "Question 431",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 432,
        "fields": {
            "name": "Question 432",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 433,
        "fields": {
            "name": "Question 433",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 434,
        "fields": {
            "name": "Question 434",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 435,
        "fields": {
            "name": "Question 435",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 436,
        "fields": {
            "name": "Question 436",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 437,
        "fields": {
            "name": "Question 437",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 438,
        "fields": {
            "name": "Question 438",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 439,
        "fields": {
            "name": "Question 439",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 440,
        "fields": {
            "name": "Question 440",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 441,
        "fields": {
            "name": "Question 441",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 442,
        "fields": {
            "name": "Question 442",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 443,
        "fields": {
            "name": "Question 443",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 444,
        "fields": {
            "name": "Question 444",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 445,
        "fields": {
            "name": "Question 445",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 446,
        "fields": {
            "name": "Question 446",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 447,
        "fields": {
            "name": "Question 447",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 448,
        "fields": {
            "name": "Question 448",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 449,
        "fields": {
            "name": "Question 449",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 450,
        "fields": {
            "name": "Question 450",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 451,
        "fields": {
            "name": "Question 451",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 452,
        "fields": {
            "name": "Question 452",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 453,
        "fields": {
            "name": "Question 453",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 454,
        "fields": {
            "name": "Question 454",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 455,
        "fields": {
            "name": "Question 455",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 456,
        "fields": {
            "name": "Question 456",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 457,
        "fields": {
            "name": "Question 457",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 458,
        "fields": {
            "name": "Question 458",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 459,
        "fields": {
            "name": "Question 459",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 460,
        "fields": {
            "name": "Question 460",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 461,
        "fields": {
            "name": "Question 461",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 462,
        "fields": {
            "name": "Question 462",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 463,
        "fields": {
            "name": "Question 463",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 464,
        "fields": {
            "name": "Question 464",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 465,
        "fields": {
            "name": "Question 465",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 466,
        "fields": {
            "name": "Question 466",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 467,
        "fields": {
            "name": "Question 467",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 468,
        "fields": {
            "name": "Question 468",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 469,
        "fields": {
            "name": "Question 469",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 470,
        "fields": {
            "name": "Question 470",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 471,
        "fields": {
            "name": "Question 471",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 472,
        "fields": {
            "name": "Question 472",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 473,
        "fields": {
            "name": "Question 473",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 474,
        "fields": {
            "name": "Question 474",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 475,
        "fields": {
            "name": "Question 475",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 476,
        "fields": {
            "name": "Question 476",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 477,
        "fields": {
            "name": "Question 477",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 478,
        "fields": {
            "name": "Question 478",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 479,
        "fields": {
            "name": "Question 479",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 480,
        "fields": {
            "name": "Question 480",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 481,
        "fields": {
            "name": "Question 481",
            "description": "Determine if a number is divisible by 2",
            "code": "def isDivisibleByTwo(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [1],
            "unitTests": [1, 2]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 482,
        "fields": {
            "name": "Question 482",
            "description": "Calculate the sum of two numbers",
            "code": "def sum(a, b):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [2],
            "unitTests": [3, 4]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 483,
        "fields": {
            "name": "Question 483",
            "description": "Subtract x from y",
            "code": "def subtract(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [3],
            "unitTests": [5, 6]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 484,
        "fields": {
            "name": "Question 484",
            "description": "set the Variable var equal to n and return it",
            "code": "def setVariable(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [4],
            "unitTests": [7, 8]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 485,
        "fields": {
            "name": "Question 485",
            "description": "Find the product of these two numbers",
            "code": "def product(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [5],
            "unitTests": [9, 10]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 486,
        "fields": {
            "name": "Question 486",
            "description": "Return true if the variable is equal to 3",
            "code": "def isThree(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [6],
            "unitTests": [11, 12]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 487,
        "fields": {
            "name": "Question 487",
            "description": "Return whether a number is even or odd",
            "code": "def oddOrEven(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [7],
            "unitTests": [13, 14]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 488,
        "fields": {
            "name": "Question 488",
            "description": "Return true if x is greater than y",
            "code": "def greaterThan(x, y):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [8],
            "unitTests": [15, 16]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 489,
        "fields": {
            "name": "Question 489",
            "description": "Return true if n is even or less than 10",
            "code": "def evenOrLess(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [9],
            "unitTests": [17, 18]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 490,
        "fields": {
            "name": "Question 490",
            "description": "Return true if n is odd and greater than 5",
            "code": "def oddAndMore(n):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [10],
            "unitTests": [19, 20]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 491,
        "fields": {
            "name": "Question 491",
            "description": "Return the even number in this list:",
            "code": "def findEven(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [11],
            "unitTests": [21, 22]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 492,
        "fields": {
            "name": "Question 492",
            "description": "Return the odd number in this list:",
            "code": "def findOdd(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [12],
            "unitTests": [23, 24]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 493,
        "fields": {
            "name": "Question 493",
            "description": "Add all the even numbers in the list:",
            "code": "def evenSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [13],
            "unitTests": [25, 26]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 494,
        "fields": {
            "name": "Question 494",
            "description": "Add all the odd numbers in the list:",
            "code": "def oddSum(numList):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [14],
            "unitTests": [27, 28]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 495,
        "fields": {
            "name": "Question 495",
            "description": "Add up all the numbers that are less than five",
            "code": "def lessFiveSum(numlist):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [15],
            "unitTests": [29, 30]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 496,
        "fields": {
            "name": "Question 496",
            "description": "Remove the last 3 letters from the string",
            "code": "def truncate(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [16],
            "unitTests": [31, 32]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 497,
        "fields": {
            "name": "Question 497",
            "description": "Return the length of the string",
            "code": "def lenString(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [17],
            "unitTests": [33, 34]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 498,
        "fields": {
            "name": "Question 498",
            "description": "Add these two strings together",
            "code": "def addStrings(word1, word2):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [18],
            "unitTests": [35, 36]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 499,
        "fields": {
            "name": "Question 499",
            "description": "Get the first letter of this string",
            "code": "def firstLetter(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [19],
            "unitTests": [37, 38]
        }
    },
    {
        "model": "coding.codequestion",
        "pk": 500,
        "fields": {
            "name": "Question 500",
            "description": "Check to see if the string contains the letter 'e' ",
            "code": "def containsE(word):\n",
            "author": 16,
            "practice": false,
            "version": 1,
            "solutions": [20],
            "unitTests": [39, 40]
        }
    }
    ]
    